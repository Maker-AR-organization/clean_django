from django.http import HttpResponse

from myapp.Utils.Get_Token import Get_Token
from myapp.Utils.save_base64_image import save_base64
from myapp.models import SmokeData, BoxData, EggData, ToyData, FoodData, MedicineData, BatteryData, FruitData
import requests
import json
from jsonpath import jsonpath
from rest_framework.views import APIView
from myapp.Utils.obs_upload import obs_upload_file


# 定义一个IotData类用于继承自Django REST framwork中的APIView基类，用于处理与物联网设备数据相关的API请求
# 处理垃圾分类接口


class IotData_Fenlei(APIView):
    # 调用ModelArts的图像分类算法
    def Suanfa(self, file_path):
        # 访问ModelArts的图像分类API
        url = "https://83b938bc13af468c8645c0351637c26f.apig.cn-north-4.huaweicloudapis.com/v1/infers/feac6eff-41f8-4251-9949-7b78f48c8de7"
        # token
        token = Get_Token()
        # Send request.
        headers = {
            'X-Auth-Token': token
        }
        files = {
            'images': open(file_path, 'rb')
        }
        resp = requests.post(url, headers=headers, files=files)
        resp_text = resp.text
        return resp_text

    # 定义一个处理post请求的方法
    def post(self, request, *args, **kwargs):
        # 从请求对象中获取原始的POST数据，json数据
        data = request.data
        # 使用get方法从原始的POST数据中提取'notify_data'字段的值
        notify_data = request.data.get('notify_data')
        # 使用jsonpath解析'notify_data',获取其中的'event_time'字段的所有值
        event_time = jsonpath(notify_data, '$..event_time')
        # 使用jsonpath解析'notify_data',获取其中的'device_id'字段的所有值
        device_id = jsonpath(notify_data, '$..device_id')
        # 使用jsonpath解析'notify_data',获取其中的'service_id'字段的所有值
        service_id = jsonpath(notify_data, '$..service_id')
        # 使用jsonpath解析'notify_data',获取其中的'image_Value'字段的所有值
        image_Value = jsonpath(notify_data, '$..image_Value')
        # image = image_Value[0]
        image = ''
        file_path = "../../fenlei.jpg"  # 保存的图像文件路径
        # 调用解码base64，保存图片
        save_base64(image, file_path)
        target = self.Suanfa(file_path)
        # 假设这是你的 JSON 数据
        json_data = target

        # 解析 JSON 数据
        parsed_data = json.loads(json_data)

        # 提取 predicted_label 和其置信度
        class_name = parsed_data['predicted_label']
        score = float(parsed_data['scores'][0][1])  # 第一个元素的置信度

        # print("Predicted Label:", class_name)
        # print("Confidence Score:", score)
        if class_name == "其他垃圾_烟蒂":
            files_name = "smoke"
            sufa_image = "fenlei.jpg"
            url = obs_upload_file(files_name, sufa_image)
            # 创建一个新的Data模型实例，提取出数据到对应字段
            iota = SmokeData.objects.create(
                event_time=event_time[0],  # 事件时间
                device_id=device_id[0],  # 设备ID
                service_id=service_id[0],  # 服务ID
                smoke_Value=url,  # 图像数据
                class_name=class_name,  # 类别数据
                score=score,  # 置信度数据
                notify_data=data  # 原始数据
            )

            # 将新建的模型示例保存到数据库
            iota.save()

            # 处理完成后，返回HTTP响应，状态码为200，内容为"200 OK"
            return HttpResponse("200 OK")
        if class_name == "可回收物_纸板箱":
            files_name = "box"
            sufa_image = "fenlei.jpg"
            url = obs_upload_file(files_name, sufa_image)
            # 创建一个新的Data模型实例，提取出数据到对应字段
            iota = BoxData.objects.create(
                event_time=event_time[0],  # 事件时间
                device_id=device_id[0],  # 设备ID
                service_id=service_id[0],  # 服务ID
                box_Value=url,  # 图像数据
                class_name=class_name,  # 类别数据
                score=score,  # 置信度数据
                notify_data=data  # 原始数据
            )

            # 将新建的模型示例保存到数据库
            iota.save()

            # 处理完成后，返回HTTP响应，状态码为200，内容为"200 OK"
            return HttpResponse("200 OK")
        if class_name == "厨余垃圾_蛋壳":
            files_name = "egg"
            sufa_image = "fenlei.jpg"
            url = obs_upload_file(files_name, sufa_image)
            # 创建一个新的Data模型实例，提取出数据到对应字段
            iota = EggData.objects.create(
                event_time=event_time[0],  # 事件时间
                device_id=device_id[0],  # 设备ID
                service_id=service_id[0],  # 服务ID
                egg_Value=url,  # 图像数据
                class_name=class_name,  # 类别数据
                score=score,  # 置信度数据
                notify_data=data  # 原始数据
            )

            # 将新建的模型示例保存到数据库
            iota.save()

            # 处理完成后，返回HTTP响应，状态码为200，内容为"200 OK"
            return HttpResponse("200 OK")
        if class_name == "可回收物_塑料玩具":
            files_name = "toy"
            sufa_image = "fenlei.jpg"
            url = obs_upload_file(files_name, sufa_image)
            # 创建一个新的Data模型实例，提取出数据到对应字段
            iota = ToyData.objects.create(
                event_time=event_time[0],  # 事件时间
                device_id=device_id[0],  # 设备ID
                service_id=service_id[0],  # 服务ID
                toy_Value=url,  # 图像数据
                class_name=class_name,  # 类别数据
                score=score,  # 置信度数据
                notify_data=data  # 原始数据
            )

            # 将新建的模型示例保存到数据库
            iota.save()

            # 处理完成后，返回HTTP响应，状态码为200，内容为"200 OK"
            return HttpResponse("200 OK")
        if class_name == "其他垃圾_一次性餐盒":
            files_name = "food"
            sufa_image = "fenlei.jpg"
            url = obs_upload_file(files_name, sufa_image)
            # 创建一个新的Data模型实例，提取出数据到对应字段
            iota = FoodData.objects.create(
                event_time=event_time[0],  # 事件时间
                device_id=device_id[0],  # 设备ID
                service_id=service_id[0],  # 服务ID
                food_Value=url,  # 图像数据
                class_name=class_name,  # 类别数据
                score=score,  # 置信度数据
                notify_data=data  # 原始数据
            )

            # 将新建的模型示例保存到数据库
            iota.save()

            # 处理完成后，返回HTTP响应，状态码为200，内容为"200 OK"
            return HttpResponse("200 OK")
        if class_name == "有害垃圾_干电池":
            files_name = "battery"
            sufa_image = "fenlei.jpg"
            url = obs_upload_file(files_name, sufa_image)
            # 创建一个新的Data模型实例，提取出数据到对应字段
            iota = BatteryData.objects.create(
                event_time=event_time[0],  # 事件时间
                device_id=device_id[0],  # 设备ID
                service_id=service_id[0],  # 服务ID
                battery_Value=url,  # 图像数据
                class_name=class_name,  # 类别数据
                score=score,  # 置信度数据
                notify_data=data  # 原始数据
            )

            # 将新建的模型示例保存到数据库
            iota.save()

            # 处理完成后，返回HTTP响应，状态码为200，内容为"200 OK"
            return HttpResponse("200 OK")
        if class_name == "有害垃圾_过期药物":
            files_name = "medicine"
            sufa_image = "fenlei.jpg"
            url = obs_upload_file(files_name, sufa_image)
            # 创建一个新的Data模型实例，提取出数据到对应字段
            iota = MedicineData.objects.create(
                event_time=event_time[0],  # 事件时间
                device_id=device_id[0],  # 设备ID
                service_id=service_id[0],  # 服务ID
                medicine_Value=url,  # 图像数据
                class_name=class_name,  # 类别数据
                score=score,  # 置信度数据
                notify_data=data  # 原始数据
            )

            # 将新建的模型示例保存到数据库
            iota.save()

            # 处理完成后，返回HTTP响应，状态码为200，内容为"200 OK"
            return HttpResponse("200 OK")
        if class_name == "厨余垃圾_水果果皮":
            files_name = "fruit"
            sufa_image = "fenlei.jpg"
            url = obs_upload_file(files_name, sufa_image)
            # 创建一个新的Data模型实例，提取出数据到对应字段
            iota = FruitData.objects.create(
                event_time=event_time[0],  # 事件时间
                device_id=device_id[0],  # 设备ID
                service_id=service_id[0],  # 服务ID
                fruit_Value=url,  # 图像数据
                class_name=class_name,  # 类别数据
                score=score,  # 置信度数据
                notify_data=data  # 原始数据
            )

            # 将新建的模型示例保存到数据库
            iota.save()

            # 处理完成后，返回HTTP响应，状态码为200，内容为"200 OK"
            return HttpResponse("200 OK")
